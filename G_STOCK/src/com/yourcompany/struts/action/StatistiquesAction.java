/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import CDB.Statistiques;

import com.yourcompany.struts.form.StatistiquesForm;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;

public class StatistiquesAction extends Action {

	@SuppressWarnings("deprecation")
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		StatistiquesForm statistiquesForm = (StatistiquesForm) form;// TODO Auto-generated method stub
		
		// Creating arrays of type purchases and sale (achat / vente)
		ArrayList<Statistiques> Achats = new ArrayList<Statistiques>();
		ArrayList<Statistiques> Ventes = new ArrayList<Statistiques>();
		
		// Getting the type of statistics either per mweek month or year 
		// For the moment I did it just per month
		String type = statistiquesForm.getType();
		
		// Database request for purchases and sales
		ResultSet Achat, Vente;
		
		// variable for tests
		boolean temp = false;
		
		// Getting current date
		Date date = new Date(), sDate;
		
		// Getting session
		HttpSession Session = request.getSession();
		
		// TEsting the type of statistics
		if(type.equals("month")){
			// Testing day by day for 31 day in the current month
			for(int i = 0 ; i <31 ; ++i){
				// Getting purchases
				Achat = CDB.Acess_donner.selection("SELECT * FROM `achats`", "g_stock");
				while(Achat.next()){
					// Getting date of each purchases
					sDate = Achat.getDate("dateReception");
					// Checking if it match the current month7 year and the number of the day of 'i'
					if(sDate.getMonth() == date.getMonth() && sDate.getYear() == date.getYear() && sDate.getDate() == i){
						// Checking if the day was already added to the array 'Achats'
						for(int j = 0; j< Achats.size() ; ++j){
							// if yes add to the exists day and turn temp to true
							if(Achats.get(j).x == i){
								Achats.get(j).setY(Achats.get(j).y +Achat.getInt("qteAchete"));
								temp = true;
							}
						}
						// if not wich means temp is false .. we add a new day
						if(!temp){
							Achats.add(new Statistiques(i,Achat.getInt("qteAchete")));
						}
						temp  = false;
					}
				}
				
				// The same process for the sales 
				Vente = CDB.Acess_donner.selection("SELECT * FROM `commandes`", "g_vente");
				while(Vente.next()){
					sDate = Vente.getDate("dateCmd");
					if(sDate.getMonth() == date.getMonth() && sDate.getYear() == date.getYear() && sDate.getDate() == i){
						for(int j = 0; j< Ventes.size() ; ++j){
							if(Ventes.get(j).x == i){
								Ventes.get(j).setY(Ventes.get(j).y +Vente.getInt("qteCmd"));
								temp = true;
							}
						}
						if(!temp){
							Ventes.add(new Statistiques(i,Vente.getInt("qteCmd")));
						}						
					}
					
					temp  = false;
				}
			}
			
			// Here we test if there s empty days ... because the array must have 31 column
			for(int i = 0; i< 31 ; ++i) {
				 // fill the empty days
				
				for(int j = 0 ; j <Ventes.size() ; ++j){
					if(Ventes.get(j).x == i) 
						temp = true;
				}
				if(!temp)
					Ventes.add(new Statistiques(i,0));
				temp = false;
				
				for(int j = 0 ; j <Achats.size() ; ++j){
					if(Achats.get(j).x == i) 
						temp = true;
				}
				if(!temp)
					Achats.add(new Statistiques(i,0));
				temp = false;
			}
			
			//Adding the arrays to the session
			Session.setAttribute("Achats", Achats);
			Session.setAttribute("Ventes", Ventes);
			
		}
		
		return mapping.findForward("success");
	}
}